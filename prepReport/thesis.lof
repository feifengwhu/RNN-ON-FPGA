\select@language {english}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {1.1}{\ignorespaces In Figure~\ref {fig:modelNeuron_a}. each input feature $x_i$ is weighted by its corresponding weight $w_i$. During the training procedure, these weights are adjusted so that the output $y$ approaches the target value. In Figure~\ref {fig:modelNeuron_b}, we see the diagram of an actual multi polar neuron. The dendrites, where the stimuli are received, plays a role similar to that of the input nodes. The axon transmits the signal to the synaptic terminals, that are similar to the $y$ output\relax }}{6}{figure.caption.8}
\contentsline {figure}{\numberline {1.2}{\ignorespaces Three different activation functions. As you can see, the hyperbolic tangent has the same extreme value as the sign step function, but has a smooth transition between them, which can be interpreted as a \emph {soft decision} in the more ambiguous middle region, reflecting the degree of uncertainty on the decision. On the other hand, the sigmoid function goes from zero to one, and is also smooth like the hyperbolic tangent\relax }}{6}{figure.caption.9}
\contentsline {figure}{\numberline {1.3}{\ignorespaces A three layer ANN. We have omitted some of the connections in the hidden layer, for simplification purposes. $\mathbf {w}_1$ represents the weight matrix of the input layer, $\mathbf {w}_2$ the weight matrix of the connections between the input layer and the hidden layer, and $\mathbf {w}_3$ the weight connections between the hidden and the output layer. $f_{ij}(\dots )$ is the activation function of the $j$-th neuron of the $i$-th layer. Since they can be different, I chose different indexes to each.\relax }}{7}{figure.caption.10}
\addvspace {10\p@ }
